(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function n(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(i){if(i.ep)return;i.ep=!0;const s=n(i);fetch(i.href,s)}})();function g(){}function te(e){return e()}function Q(){return Object.create(null)}function C(e){e.forEach(te)}function ne(e){return typeof e=="function"}function H(e,t){return e!=e?t==t:e!==t||e&&typeof e=="object"||typeof e=="function"}function ae(e){return Object.keys(e).length===0}function p(e,t){e.appendChild(t)}function E(e,t,n){e.insertBefore(t,n||null)}function b(e){e.parentNode&&e.parentNode.removeChild(e)}function le(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function h(e){return document.createElement(e)}function oe(e){return document.createTextNode(e)}function j(){return oe(" ")}function ue(e,t,n,o){return e.addEventListener(t,n,o),()=>e.removeEventListener(t,n,o)}function _(e,t,n){n==null?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function fe(e){return Array.from(e.childNodes)}function de(e,t){t=""+t,e.wholeText!==t&&(e.data=t)}function R(e,t,n,o){n===null?e.style.removeProperty(t):e.style.setProperty(t,n,o?"important":"")}function U(e,t,n){for(let o=0;o<e.options.length;o+=1){const i=e.options[o];if(i.__value===t){i.selected=!0;return}}(!n||t!==void 0)&&(e.selectedIndex=-1)}function pe(e){const t=e.querySelector(":checked");return t&&t.__value}let O;function M(e){O=e}function he(){if(!O)throw new Error("Function called outside component initialization");return O}function ie(e){he().$$.on_mount.push(e)}const w=[],T=[];let x=[];const A=[],_e=Promise.resolve();let I=!1;function me(){I||(I=!0,_e.then(re))}function L(e){x.push(e)}function V(e){A.push(e)}const N=new Set;let $=0;function re(){if($!==0)return;const e=O;do{try{for(;$<w.length;){const t=w[$];$++,M(t),ge(t.$$)}}catch(t){throw w.length=0,$=0,t}for(M(null),w.length=0,$=0;T.length;)T.pop()();for(let t=0;t<x.length;t+=1){const n=x[t];N.has(n)||(N.add(n),n())}x.length=0}while(w.length);for(;A.length;)A.pop()();I=!1,N.clear(),M(e)}function ge(e){if(e.fragment!==null){e.update(),C(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(L)}}function ve(e){const t=[],n=[];x.forEach(o=>e.indexOf(o)===-1?t.push(o):n.push(o)),n.forEach(o=>o()),x=t}const P=new Set;let ye;function S(e,t){e&&e.i&&(P.delete(e),e.i(t))}function W(e,t,n,o){if(e&&e.o){if(P.has(e))return;P.add(e),ye.c.push(()=>{P.delete(e),o&&(n&&e.d(1),o())}),e.o(t)}else o&&o()}function X(e,t,n){const o=e.$$.props[t];o!==void 0&&(e.$$.bound[o]=n,n(e.$$.ctx[o]))}function Y(e){e&&e.c()}function G(e,t,n,o){const{fragment:i,after_update:s}=e.$$;i&&i.m(t,n),o||L(()=>{const l=e.$$.on_mount.map(te).filter(ne);e.$$.on_destroy?e.$$.on_destroy.push(...l):C(l),e.$$.on_mount=[]}),s.forEach(L)}function B(e,t){const n=e.$$;n.fragment!==null&&(ve(n.after_update),C(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function be(e,t){e.$$.dirty[0]===-1&&(w.push(e),me(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function q(e,t,n,o,i,s,l,r=[-1]){const c=O;M(e);const u=e.$$={fragment:null,ctx:[],props:s,update:g,not_equal:i,bound:Q(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(c?c.$$.context:[])),callbacks:Q(),dirty:r,skip_bound:!1,root:t.target||c.$$.root};l&&l(u.root);let a=!1;if(u.ctx=n?n(e,t.props||{},(f,v,...y)=>{const m=y.length?y[0]:v;return u.ctx&&i(u.ctx[f],u.ctx[f]=m)&&(!u.skip_bound&&u.bound[f]&&u.bound[f](m),a&&be(e,f)),v}):[],u.update(),a=!0,C(u.before_update),u.fragment=o?o(u.ctx):!1,t.target){if(t.hydrate){const f=fe(t.target);u.fragment&&u.fragment.l(f),f.forEach(b)}else u.fragment&&u.fragment.c();t.intro&&S(e.$$.fragment),G(e,t.target,t.anchor,t.customElement),re()}M(c)}class F{$destroy(){B(this,1),this.$destroy=g}$on(t,n){if(!ne(n))return g;const o=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return o.push(n),()=>{const i=o.indexOf(n);i!==-1&&o.splice(i,1)}}$set(t){this.$$set&&!ae(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}function Z(e,t,n){const o=e.slice();return o[4]=t[n][0],o[5]=t[n][1],o}function ee(e){let t,n=e[5]+"",o,i;return{c(){t=h("option"),o=oe(n),t.__value=i=e[4],t.value=t.__value},m(s,l){E(s,t,l),p(t,o)},p(s,l){l&2&&n!==(n=s[5]+"")&&de(o,n),l&2&&i!==(i=s[4])&&(t.__value=i,t.value=t.__value)},d(s){s&&b(t)}}}function $e(e){let t,n,o,i,s,l=Object.entries(e[1]),r=[];for(let c=0;c<l.length;c+=1)r[c]=ee(Z(e,l,c));return{c(){t=h("div"),n=h("select"),o=h("option"),o.textContent="Pick a movie";for(let c=0;c<r.length;c+=1)r[c].c();o.__value="",o.value=o.__value,_(n,"name","movies"),_(n,"id","movies"),_(n,"class","text-slate-800 block mx-auto mb-8 p-2"),e[0]===void 0&&L(()=>e[2].call(n))},m(c,u){E(c,t,u),p(t,n),p(n,o);for(let a=0;a<r.length;a+=1)r[a]&&r[a].m(n,null);U(n,e[0],!0),i||(s=ue(n,"change",e[2]),i=!0)},p(c,[u]){if(u&2){l=Object.entries(c[1]);let a;for(a=0;a<l.length;a+=1){const f=Z(c,l,a);r[a]?r[a].p(f,u):(r[a]=ee(f),r[a].c(),r[a].m(n,null))}for(;a<r.length;a+=1)r[a].d(1);r.length=l.length}u&3&&U(n,c[0])},i:g,o:g,d(c){c&&b(t),le(r,c),i=!1,s()}}}function we(e,t,n){let o=[],{activeMovie:i}=t;const s=r=>Object.keys(r).sort().reduce((c,u)=>(c[u]=r[u],c),{});ie(async()=>{const a=await(await fetch("https://uinelj.github.io/lbxd-stats/res/watchlist_new.json",{method:"GET",headers:{"Content-Type":"application/json"}})).json();n(1,o=s(a))});function l(){i=pe(this),n(0,i),n(1,o)}return e.$$set=r=>{"activeMovie"in r&&n(0,i=r.activeMovie)},[i,o,l]}class xe extends F{constructor(t){super(),q(this,t,we,$e,H,{activeMovie:0})}}function ke(e){let t,n,o;return{c(){t=h("div"),n=j(),o=h("script"),o.textContent='import "https://cdn.plot.ly/plotly-2.18.2.min.js";',_(o,"type","module")},m(i,s){E(i,t,s),e[2](t),E(i,n,s),p(document.head,o)},p:g,i:g,o:g,d(i){i&&b(t),e[2](null),i&&b(n),b(o)}}}function je(e,t,n){let{movie:o="robots"}=t,i;async function s(r){const c=`https://uinelj.github.io/lbxd-stats/res/graph_data/${o}.json`,f=await(await fetch(c,{method:"GET",headers:{"Content-Type":"application/json"}})).json(),v={title:r,paper_bgcolor:"rgba(0, 0, 0, 0)",plot_bgcolor:"rgba(0, 0, 0, 0)",font:{color:"rgb(226 232 240)"},yaxis:{gridcolor:"rgb(71 85 105)"},xaxis:{gridcolor:"rgb(71 85 105)"},display_mode_bar:!1,colorway:["#000000"],showlegend:!0};f.layout=v,f.data[0].text=[],Plotly.newPlot(i,f,{display_mode_bar:!1})}ie(async()=>{s(o)});function l(r){T[r?"unshift":"push"](()=>{i=r,n(0,i)})}return e.$$set=r=>{"movie"in r&&n(1,o=r.movie)},e.$$.update=()=>{e.$$.dirty&2&&s(o)},[i,o,l]}class Me extends F{constructor(t){super(),q(this,t,je,ke,H,{movie:1})}}function Ee(e){let t,n,o,i,s,l,r,c,u,a,f,v,y,m;function se(d){e[2](d)}let z={};e[0]!==void 0&&(z.activeMovie=e[0]),r=new xe({props:z}),T.push(()=>X(r,"activeMovie",se));function ce(d){e[3](d)}let K={};return e[0]!==void 0&&(K.movie=e[0]),a=new Me({props:K}),T.push(()=>X(a,"movie",ce)),{c(){t=h("main"),n=h("div"),o=h("h1"),o.textContent="Letterstonks",i=j(),s=h("div"),s.innerHTML=`<p>Track the rating evolution of movies!</p> 
      <p>Note that movies ratings are monitored and logged periodically, so you
        can&#39;t go back in time.</p>`,l=j(),Y(r.$$.fragment),u=j(),Y(a.$$.fragment),v=j(),y=h("div"),y.innerHTML=`<h2 class="text-xl">How does that work?</h2> 
      <p class="m-2 p-2 max-w-md">Each 12 hours, I get the most popular movies of the week/year/all time,
        and add them in a watchlist if they aren&#39;t yet there. Then, for the new
        additions, I get their current rating.
        <br/>
        Then, I get the rating of <code>n</code>
        movies that are already in the watchlist. The <code>n</code> is defined so
        that all movies are updated at least once a week via random sampling.</p>`,_(o,"class","text-2xl m-auto text-right pt-8 mr-2 font-serif"),_(s,"class","mx-auto my-20"),_(y,"class","p-2"),_(n,"class","my-0 mx-auto max-w-7xl backdrop-blur-lg"),_(t,"class","backdrop bg-cover bg-no-repeat bg-fixed m-0 p-0 h-screen text-slate-200 svelte-1ng59wk"),R(t,"--backdrop_css",e[1])},m(d,k){E(d,t,k),p(t,n),p(n,o),p(n,i),p(n,s),p(n,l),G(r,n,null),p(n,u),G(a,n,null),p(n,v),p(n,y),m=!0},p(d,[k]){const D={};!c&&k&1&&(c=!0,D.activeMovie=d[0],V(()=>c=!1)),r.$set(D);const J={};!f&&k&1&&(f=!0,J.movie=d[0],V(()=>f=!1)),a.$set(J),(!m||k&2)&&R(t,"--backdrop_css",d[1])},i(d){m||(S(r.$$.fragment,d),S(a.$$.fragment,d),m=!0)},o(d){W(r.$$.fragment,d),W(a.$$.fragment,d),m=!1},d(d){d&&b(t),B(r),B(a)}}}const Oe="https://image.tmdb.org/t/p/w1280",Te="https://uinelj.github.io/lbxd-stats/res/movie_data/";async function Pe(e){const t=Te+`${e}.json`,o=await(await fetch(t)).json();return`url(${Oe+o.backdrop_path})`}function Le(e,t,n){let o,i=null;function s(r){o=r,n(0,o)}function l(r){o=r,n(0,o)}return e.$$.update=()=>{e.$$.dirty&1&&Pe(o).then(r=>n(1,i=r))},[o,i,s,l]}class Ce extends F{constructor(t){super(),q(this,t,Le,Ee,H,{})}}new Ce({target:document.getElementById("app")});
